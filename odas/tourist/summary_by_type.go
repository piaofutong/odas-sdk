// Code generated by sdk-generator. DO NOT EDIT.
// 此文件由代码生成器自动生成，请勿手动修改

package tourist

import (
	"fmt"
	"github.com/piaofutong/odas-sdk/odas/common"
	"net/url"
)

// SummaryByTypeReq  按类型汇总请求
type SummaryByTypeReq struct {
	Request *common.PassedTimeSpanByOrderTypeV4Request `json:"request,omitempty"`
}

// Api 返回API路径
func (r *SummaryByTypeReq) Api() string {
	params := url.Values{}
	if r.Request != nil {
		requestParams := r.Request.Params("")
		for key, values := range requestParams {
			for _, value := range values {
				params.Add(key, value)
			}
		}
	}

	return fmt.Sprintf("/v5/tourist/pre-booking/g-type/summary?%s", params.Encode())

}

// Method 返回HTTP方法
func (r *SummaryByTypeReq) Method() string {
	return "GET"
}

// Body 返回请求体
func (r *SummaryByTypeReq) Body() []byte {
	return nil

}

// ContentType 返回内容类型
func (r *SummaryByTypeReq) ContentType() string {
	return "application/json"
}

// AuthRequired 返回是否需要认证
func (r *SummaryByTypeReq) AuthRequired() bool {
	return true
}

// SummaryByTypeResp  按类型汇总响应
type SummaryByTypeResp struct {
	Total PreBookingSummary    `json:"total,omitempty"`
	List  []*SummaryByTypeList `json:"list,omitempty"`
}

// SummaryByTypeList  按类型汇总列表
type SummaryByTypeList struct {
	TypeName string            `json:"typeName,omitempty"`
	Summary  PreBookingSummary `json:"summary,omitempty"`
	Percent  float64           `json:"percent,omitempty"`
}

// Params 将SummaryByTypeList转换为url.Values
func (p SummaryByTypeList) Params(prefix string) url.Values {
	params := url.Values{}
	if p.TypeName != "" {
		params.Add(prefix+"typeName", p.TypeName)
	}
	for key, values := range p.Summary.Params(prefix + "summary.") {
		for _, value := range values {
			params.Add(key, value)
		}
	}
	if p.Percent > 0 {
		params.Add(prefix+"percent", fmt.Sprintf("%v", p.Percent))
	}
	return params
}
