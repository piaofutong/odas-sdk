// Code generated by sdk-generator. DO NOT EDIT.
// 此文件由代码生成器自动生成，请勿手动修改

package tourist

import (
	"fmt"
	"github.com/piaofutong/odas-sdk/odas/common"
	"net/url"
)

// TouristSummaryByPeerReq  按同行人数游客汇总请求
type TouristSummaryByPeerReq struct {
	Request  common.PassedTimeSpanByOrderTypeV5Request `json:"request,omitempty"`
	Province string                                    `json:"province,omitempty"`
}

// Api 返回API路径
func (r *TouristSummaryByPeerReq) Api() string {
	params := url.Values{}

	requestParams := r.Request.Params("")
	for key, values := range requestParams {
		for _, value := range values {
			params.Add(key, value)
		}
	}

	if r.Province != "" {
		params.Add("province", r.Province)
	}
	return fmt.Sprintf("/v5/tourist/portrait/g-peer/tourist-summary?%s", params.Encode())

}

// Method 返回HTTP方法
func (r *TouristSummaryByPeerReq) Method() string {
	return "GET"
}

// Body 返回请求体
func (r *TouristSummaryByPeerReq) Body() []byte {
	return nil

}

// ContentType 返回内容类型
func (r *TouristSummaryByPeerReq) ContentType() string {
	return "application/json"
}

// AuthRequired 返回是否需要认证
func (r *TouristSummaryByPeerReq) AuthRequired() bool {
	return true
}

// TouristSummaryByPeerResp  按同行人数游客汇总响应
type TouristSummaryByPeerResp struct {
	Total TouristSummary              `json:"total,omitempty"`
	List  []*TouristSummaryByPeerList `json:"list,omitempty"`
}

// TouristSummaryByPeerList  按同行人数游客汇总列表
type TouristSummaryByPeerList struct {
	PeerGroup string         `json:"peerGroup,omitempty"`
	Summary   TouristSummary `json:"summary,omitempty"`
	Rate      float64        `json:"rate,omitempty"`
}

// Params 将TouristSummaryByPeerList转换为url.Values
func (p TouristSummaryByPeerList) Params(prefix string) url.Values {
	params := url.Values{}
	if p.PeerGroup != "" {
		params.Add(prefix+"peerGroup", p.PeerGroup)
	}
	for key, values := range p.Summary.Params(prefix + "summary.") {
		for _, value := range values {
			params.Add(key, value)
		}
	}
	if p.Rate > 0 {
		params.Add(prefix+"rate", fmt.Sprintf("%v", p.Rate))
	}
	return params
}
