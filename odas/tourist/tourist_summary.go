// Code generated by sdk-generator. DO NOT EDIT.
// 此文件由代码生成器自动生成，请勿手动修改

package tourist

import (
	"fmt"
	"github.com/piaofutong/odas-sdk/odas/common"
	"net/url"
	"strconv"
)

// TouristSummaryReq  客流汇总请求
type TouristSummaryReq struct {
	Request common.PassedTimeSpanByOrderTypeV4Request `json:"request,omitempty"`
	Unknown bool                                      `json:"unknown,omitempty"`
}

// Api 返回API路径
func (r *TouristSummaryReq) Api() string {
	params := url.Values{}

	requestParams := r.Request.Params("")
	for key, values := range requestParams {
		for _, value := range values {
			params.Add(key, value)
		}
	}

	if r.Unknown {
		params.Add("unknown", "true")
	}
	return fmt.Sprintf("/v5/tourist/flow/tourist-summary?%s", params.Encode())

}

// Method 返回HTTP方法
func (r *TouristSummaryReq) Method() string {
	return "GET"
}

// Body 返回请求体
func (r *TouristSummaryReq) Body() []byte {
	return nil

}

// ContentType 返回内容类型
func (r *TouristSummaryReq) ContentType() string {
	return "application/json"
}

// AuthRequired 返回是否需要认证
func (r *TouristSummaryReq) AuthRequired() bool {
	return true
}

// TouristSummaryResp  客流汇总响应
type TouristSummaryResp struct {
	Total TouristSummary        `json:"total"`
	List  []*TouristSummaryList `json:"list"`
}

// TouristSummary  游客汇总
type TouristSummary struct {
	Count int64 `json:"count,omitempty"`
}

// Params 将TouristSummary转换为url.Values
func (p TouristSummary) Params(prefix string) url.Values {
	params := url.Values{}
	if p.Count > 0 {
		params.Add(prefix+"count", strconv.FormatInt(p.Count, 10))
	}
	return params
}

// TouristSummaryList  客流汇总列表
type TouristSummaryList struct {
	Date    int64           `json:"date,omitempty"`
	Summary TouristSummary2 `json:"summary,omitempty"`
}

// Params 将TouristSummaryList转换为url.Values
func (p TouristSummaryList) Params(prefix string) url.Values {
	params := url.Values{}
	if p.Date > 0 {
		params.Add(prefix+"date", strconv.FormatInt(p.Date, 10))
	}
	for key, values := range p.Summary.Params(prefix + "summary.") {
		for _, value := range values {
			params.Add(key, value)
		}
	}
	return params
}

// TouristSummary2  客流汇总2
type TouristSummary2 struct {
	Count int64 `json:"count,omitempty"`
}

// Params 将TouristSummary2转换为url.Values
func (p TouristSummary2) Params(prefix string) url.Values {
	params := url.Values{}
	if p.Count > 0 {
		params.Add(prefix+"count", strconv.FormatInt(p.Count, 10))
	}
	return params
}
