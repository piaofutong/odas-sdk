// Code generated by sdk-generator. DO NOT EDIT.
// 此文件由代码生成器自动生成，请勿手动修改

package s3rd

import (
	"fmt"
	"net/url"
	"strconv"
	"time"
)

// InoutSummaryByHourReq InoutSummaryByHour请求
type InoutSummaryByHourReq struct {
	Sid []int64 `json:"sid,omitempty"`
	Date time.Time `json:"date,omitempty"`
	Compare *time.Time `json:"compare,omitempty"`

}

// Api 返回API路径
func (r *InoutSummaryByHourReq) Api() string {
	params := url.Values{}
	if len(r.Sid) > 0 {
		for _, id := range r.Sid {
			params.Add("sid", strconv.FormatInt(id, 10))
		}
	}
	if !r.Date.IsZero() {
		params.Add("date", r.Date.Format("2006-01-02 15:04:05"))
	}
	if r.Compare != nil {
		params.Add("compare", r.Compare.Format("2006-01-02 15:04:05"))
	}
	return fmt.Sprintf("/v5/s3rd/parking/g-hour/inout-summary?%s", params.Encode())

}

// Method 返回HTTP方法
func (r *InoutSummaryByHourReq) Method() string {
	return "GET"
}

// Body 返回请求体
func (r *InoutSummaryByHourReq) Body() []byte {
	return nil

}

// ContentType 返回内容类型
func (r *InoutSummaryByHourReq) ContentType() string {
	return "application/json"
}

// AuthRequired 返回是否需要认证
func (r *InoutSummaryByHourReq) AuthRequired() bool {
	return true
}


// InoutSummaryByHourResp InoutSummaryByHour响应
type InoutSummaryByHourResp struct {
	Total InoutSummary `json:"total,omitempty"`
	CompareTotal InoutSummary `json:"compareTotal,omitempty"`
	List []*InoutSummaryByHourList `json:"list,omitempty"`

}



// InoutSummary InoutSummary
type InoutSummary struct {
	In int64 `json:"in,omitempty"`
	Out int64 `json:"out,omitempty"`
	Being int64 `json:"being,omitempty"`

}

// Params 将InoutSummary转换为url.Values
func (p InoutSummary) Params(prefix string) url.Values {
	params := url.Values{}
	if p.In > 0 {
		params.Add(prefix+"in", strconv.FormatInt(p.In, 10))
	}
	if p.Out > 0 {
		params.Add(prefix+"out", strconv.FormatInt(p.Out, 10))
	}
	if p.Being > 0 {
		params.Add(prefix+"being", strconv.FormatInt(p.Being, 10))
	}
	return params
}


// InoutSummaryByHourList InoutSummaryByHourList
type InoutSummaryByHourList struct {
	Time string `json:"time,omitempty"`
	Summary InoutSummary `json:"summary,omitempty"`
	Compare InoutSummary `json:"compare,omitempty"`

}

// Params 将InoutSummaryByHourList转换为url.Values
func (p InoutSummaryByHourList) Params(prefix string) url.Values {
	params := url.Values{}
	if p.Time != "" {
		params.Add(prefix+"time", p.Time)
	}
	for key, values := range p.Summary.Params(prefix+"summary.") {
		for _, value := range values {
			params.Add(key, value)
		}
	}
	for key, values := range p.Compare.Params(prefix+"compare.") {
		for _, value := range values {
			params.Add(key, value)
		}
	}
	return params
}


