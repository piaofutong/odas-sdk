// Code generated by sdk-generator. DO NOT EDIT.
// 此文件由代码生成器自动生成，请勿手动修改

package basic_analyze

import (
	"fmt"
	"net/url"
	"github.com/piaofutong/odas-sdk/odas/request/common"
	"strconv"
)

// OrderSummaryByProductReq OrderSummaryByProduct请求
type OrderSummaryByProductReq struct {
	Request common.PassedTimeSpanByOrderTypeV4Request `json:"request,omitempty"`
	Limit int64 `json:"limit,omitempty"`

}

// Api 返回API路径
func (r *OrderSummaryByProductReq) Api() string {
	params := url.Values{}

	requestParams := r.Request.Params("")
	for key, values := range requestParams {
		for _, value := range values {
			params.Add(key, value)
		}
	}

	if r.Limit > 0 {
		params.Add("limit", strconv.FormatInt(r.Limit, 10))
	}
	return fmt.Sprintf("/v5/basic_analyze/report/g-product/order-summary?%s", params.Encode())

}

// Method 返回HTTP方法
func (r *OrderSummaryByProductReq) Method() string {
	return "GET"
}

// Body 返回请求体
func (r *OrderSummaryByProductReq) Body() []byte {
	return nil

}

// ContentType 返回内容类型
func (r *OrderSummaryByProductReq) ContentType() string {
	return "application/json"
}

// AuthRequired 返回是否需要认证
func (r *OrderSummaryByProductReq) AuthRequired() bool {
	return true
}


// OrderSummaryByProductResp OrderSummaryByProduct响应
type OrderSummaryByProductResp struct {
	Total OrderSummary `json:"total,omitempty"`
	List []*OrderSummaryByProductList `json:"list,omitempty"`

}



// OrderSummaryByProductList OrderSummaryByProductList
type OrderSummaryByProductList struct {
	Lid int64 `json:"lid,omitempty"`
	Lname string `json:"lname,omitempty"`
	Summary OrderSummary `json:"summary,omitempty"`

}

// Params 将OrderSummaryByProductList转换为url.Values
func (p OrderSummaryByProductList) Params(prefix string) url.Values {
	params := url.Values{}
	if p.Lid > 0 {
		params.Add(prefix+"lid", strconv.FormatInt(p.Lid, 10))
	}
	if p.Lname != "" {
		params.Add(prefix+"lname", p.Lname)
	}
	for key, values := range p.Summary.Params(prefix+"summary.") {
		for _, value := range values {
			params.Add(key, value)
		}
	}
	return params
}


