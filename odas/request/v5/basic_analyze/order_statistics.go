// Code generated by sdk-generator. DO NOT EDIT.
// 此文件由代码生成器自动生成，请勿手动修改

package basic_analyze

import (
	"fmt"
	"net/url"
	"github.com/piaofutong/odas-sdk/odas/request/common"
	"strconv"
)

// OrderStatisticsReq OrderStatistics请求
type OrderStatisticsReq struct {
	Request common.PassedTimeSpanV4Request `json:"request,omitempty"`
	OrderType int32 `json:"orderType,omitempty"`
	YearOnYear bool `json:"yearOnYear,omitempty"`
	PeriodOnPeriod bool `json:"periodOnPeriod,omitempty"`

}

// Api 返回API路径
func (r *OrderStatisticsReq) Api() string {
	params := url.Values{}

	requestParams := r.Request.Params("")
	for key, values := range requestParams {
		for _, value := range values {
			params.Add(key, value)
		}
	}

	if r.OrderType > 0 {
		params.Add("orderType", strconv.FormatInt(int64(r.OrderType), 10))
	}
	if r.YearOnYear {
		params.Add("yearOnYear", "true")
	}
	if r.PeriodOnPeriod {
		params.Add("periodOnPeriod", "true")
	}
	return fmt.Sprintf("/v5/basic_analyze/report/order-statistics?%s", params.Encode())

}

// Method 返回HTTP方法
func (r *OrderStatisticsReq) Method() string {
	return "GET"
}

// Body 返回请求体
func (r *OrderStatisticsReq) Body() []byte {
	return nil

}

// ContentType 返回内容类型
func (r *OrderStatisticsReq) ContentType() string {
	return "application/json"
}

// AuthRequired 返回是否需要认证
func (r *OrderStatisticsReq) AuthRequired() bool {
	return true
}


// OrderStatisticsResp OrderStatistics响应
type OrderStatisticsResp struct {
	Summary OrderSummary `json:"summary,omitempty"`
	YearOnYear OrderCompareStatisticsRate `json:"yearOnYear,omitempty"`
	PeriodOnPeriod OrderCompareStatisticsRate `json:"periodOnPeriod,omitempty"`

}



// OrderSummary OrderSummary
type OrderSummary struct {
	OrderNum int64 `json:"orderNum,omitempty"`
	OrderTicket int64 `json:"orderTicket,omitempty"`
	OrderAmount int64 `json:"orderAmount,omitempty"`
	OrderCostMoney int64 `json:"orderCostMoney,omitempty"`
	VerifiedNum int64 `json:"verifiedNum,omitempty"`
	VerifiedTicket int64 `json:"verifiedTicket,omitempty"`
	VerifiedAmount int64 `json:"verifiedAmount,omitempty"`
	VerifiedCostMoney int64 `json:"verifiedCostMoney,omitempty"`
	FinishedNum int64 `json:"finishedNum,omitempty"`
	FinishedTicket int64 `json:"finishedTicket,omitempty"`
	FinishedAmount int64 `json:"finishedAmount,omitempty"`
	FinishedCostMoney int64 `json:"finishedCostMoney,omitempty"`
	RevokedNum int64 `json:"revokedNum,omitempty"`
	RevokedTicket int64 `json:"revokedTicket,omitempty"`
	RevokedAmount int64 `json:"revokedAmount,omitempty"`
	RevokedCostMoney int64 `json:"revokedCostMoney,omitempty"`
	CancelNum int64 `json:"cancelNum,omitempty"`
	CancelTicket int64 `json:"cancelTicket,omitempty"`
	CancelAmount int64 `json:"cancelAmount,omitempty"`
	CancelCostMoney int64 `json:"cancelCostMoney,omitempty"`
	PrintNum int64 `json:"printNum,omitempty"`
	AfterSaleTicketNum int64 `json:"afterSaleTicketNum,omitempty"`
	AfterSaleRefundMoney int64 `json:"afterSaleRefundMoney,omitempty"`
	AfterSaleIncomeMoney int64 `json:"afterSaleIncomeMoney,omitempty"`

}

// Params 将OrderSummary转换为url.Values
func (p OrderSummary) Params(prefix string) url.Values {
	params := url.Values{}
	if p.OrderNum > 0 {
		params.Add(prefix+"orderNum", strconv.FormatInt(p.OrderNum, 10))
	}
	if p.OrderTicket > 0 {
		params.Add(prefix+"orderTicket", strconv.FormatInt(p.OrderTicket, 10))
	}
	if p.OrderAmount > 0 {
		params.Add(prefix+"orderAmount", strconv.FormatInt(p.OrderAmount, 10))
	}
	if p.OrderCostMoney > 0 {
		params.Add(prefix+"orderCostMoney", strconv.FormatInt(p.OrderCostMoney, 10))
	}
	if p.VerifiedNum > 0 {
		params.Add(prefix+"verifiedNum", strconv.FormatInt(p.VerifiedNum, 10))
	}
	if p.VerifiedTicket > 0 {
		params.Add(prefix+"verifiedTicket", strconv.FormatInt(p.VerifiedTicket, 10))
	}
	if p.VerifiedAmount > 0 {
		params.Add(prefix+"verifiedAmount", strconv.FormatInt(p.VerifiedAmount, 10))
	}
	if p.VerifiedCostMoney > 0 {
		params.Add(prefix+"verifiedCostMoney", strconv.FormatInt(p.VerifiedCostMoney, 10))
	}
	if p.FinishedNum > 0 {
		params.Add(prefix+"finishedNum", strconv.FormatInt(p.FinishedNum, 10))
	}
	if p.FinishedTicket > 0 {
		params.Add(prefix+"finishedTicket", strconv.FormatInt(p.FinishedTicket, 10))
	}
	if p.FinishedAmount > 0 {
		params.Add(prefix+"finishedAmount", strconv.FormatInt(p.FinishedAmount, 10))
	}
	if p.FinishedCostMoney > 0 {
		params.Add(prefix+"finishedCostMoney", strconv.FormatInt(p.FinishedCostMoney, 10))
	}
	if p.RevokedNum > 0 {
		params.Add(prefix+"revokedNum", strconv.FormatInt(p.RevokedNum, 10))
	}
	if p.RevokedTicket > 0 {
		params.Add(prefix+"revokedTicket", strconv.FormatInt(p.RevokedTicket, 10))
	}
	if p.RevokedAmount > 0 {
		params.Add(prefix+"revokedAmount", strconv.FormatInt(p.RevokedAmount, 10))
	}
	if p.RevokedCostMoney > 0 {
		params.Add(prefix+"revokedCostMoney", strconv.FormatInt(p.RevokedCostMoney, 10))
	}
	if p.CancelNum > 0 {
		params.Add(prefix+"cancelNum", strconv.FormatInt(p.CancelNum, 10))
	}
	if p.CancelTicket > 0 {
		params.Add(prefix+"cancelTicket", strconv.FormatInt(p.CancelTicket, 10))
	}
	if p.CancelAmount > 0 {
		params.Add(prefix+"cancelAmount", strconv.FormatInt(p.CancelAmount, 10))
	}
	if p.CancelCostMoney > 0 {
		params.Add(prefix+"cancelCostMoney", strconv.FormatInt(p.CancelCostMoney, 10))
	}
	if p.PrintNum > 0 {
		params.Add(prefix+"printNum", strconv.FormatInt(p.PrintNum, 10))
	}
	if p.AfterSaleTicketNum > 0 {
		params.Add(prefix+"afterSaleTicketNum", strconv.FormatInt(p.AfterSaleTicketNum, 10))
	}
	if p.AfterSaleRefundMoney > 0 {
		params.Add(prefix+"afterSaleRefundMoney", strconv.FormatInt(p.AfterSaleRefundMoney, 10))
	}
	if p.AfterSaleIncomeMoney > 0 {
		params.Add(prefix+"afterSaleIncomeMoney", strconv.FormatInt(p.AfterSaleIncomeMoney, 10))
	}
	return params
}


// OrderCompareStatisticsRate OrderCompareStatisticsRate
type OrderCompareStatisticsRate struct {
	OrderNum float64 `json:"orderNum,omitempty"`
	OrderTicket float64 `json:"orderTicket,omitempty"`
	OrderAmount float64 `json:"orderAmount,omitempty"`
	OrderCostMoney float64 `json:"orderCostMoney,omitempty"`
	VerifiedNum float64 `json:"verifiedNum,omitempty"`
	VerifiedTicket float64 `json:"verifiedTicket,omitempty"`
	VerifiedAmount float64 `json:"verifiedAmount,omitempty"`
	VerifiedCostMoney float64 `json:"verifiedCostMoney,omitempty"`
	FinishedNum float64 `json:"finishedNum,omitempty"`
	FinishedTicket float64 `json:"finishedTicket,omitempty"`
	FinishedAmount float64 `json:"finishedAmount,omitempty"`
	FinishedCostMoney float64 `json:"finishedCostMoney,omitempty"`
	RevokedNum float64 `json:"revokedNum,omitempty"`
	RevokedTicket float64 `json:"revokedTicket,omitempty"`
	RevokedAmount float64 `json:"revokedAmount,omitempty"`
	RevokedCostMoney float64 `json:"revokedCostMoney,omitempty"`
	CancelNum float64 `json:"cancelNum,omitempty"`
	CancelTicket float64 `json:"cancelTicket,omitempty"`
	CancelAmount float64 `json:"cancelAmount,omitempty"`
	CancelCostMoney float64 `json:"cancelCostMoney,omitempty"`
	PrintNum float64 `json:"printNum,omitempty"`
	AfterSaleTicketNum float64 `json:"afterSaleTicketNum,omitempty"`
	AfterSaleRefundMoney float64 `json:"afterSaleRefundMoney,omitempty"`
	AfterSaleIncomeMoney float64 `json:"afterSaleIncomeMoney,omitempty"`

}

// Params 将OrderCompareStatisticsRate转换为url.Values
func (p OrderCompareStatisticsRate) Params(prefix string) url.Values {
	params := url.Values{}
	if p.OrderNum > 0 {
		params.Add(prefix+"orderNum", fmt.Sprintf("%v", p.OrderNum))
	}
	if p.OrderTicket > 0 {
		params.Add(prefix+"orderTicket", fmt.Sprintf("%v", p.OrderTicket))
	}
	if p.OrderAmount > 0 {
		params.Add(prefix+"orderAmount", fmt.Sprintf("%v", p.OrderAmount))
	}
	if p.OrderCostMoney > 0 {
		params.Add(prefix+"orderCostMoney", fmt.Sprintf("%v", p.OrderCostMoney))
	}
	if p.VerifiedNum > 0 {
		params.Add(prefix+"verifiedNum", fmt.Sprintf("%v", p.VerifiedNum))
	}
	if p.VerifiedTicket > 0 {
		params.Add(prefix+"verifiedTicket", fmt.Sprintf("%v", p.VerifiedTicket))
	}
	if p.VerifiedAmount > 0 {
		params.Add(prefix+"verifiedAmount", fmt.Sprintf("%v", p.VerifiedAmount))
	}
	if p.VerifiedCostMoney > 0 {
		params.Add(prefix+"verifiedCostMoney", fmt.Sprintf("%v", p.VerifiedCostMoney))
	}
	if p.FinishedNum > 0 {
		params.Add(prefix+"finishedNum", fmt.Sprintf("%v", p.FinishedNum))
	}
	if p.FinishedTicket > 0 {
		params.Add(prefix+"finishedTicket", fmt.Sprintf("%v", p.FinishedTicket))
	}
	if p.FinishedAmount > 0 {
		params.Add(prefix+"finishedAmount", fmt.Sprintf("%v", p.FinishedAmount))
	}
	if p.FinishedCostMoney > 0 {
		params.Add(prefix+"finishedCostMoney", fmt.Sprintf("%v", p.FinishedCostMoney))
	}
	if p.RevokedNum > 0 {
		params.Add(prefix+"revokedNum", fmt.Sprintf("%v", p.RevokedNum))
	}
	if p.RevokedTicket > 0 {
		params.Add(prefix+"revokedTicket", fmt.Sprintf("%v", p.RevokedTicket))
	}
	if p.RevokedAmount > 0 {
		params.Add(prefix+"revokedAmount", fmt.Sprintf("%v", p.RevokedAmount))
	}
	if p.RevokedCostMoney > 0 {
		params.Add(prefix+"revokedCostMoney", fmt.Sprintf("%v", p.RevokedCostMoney))
	}
	if p.CancelNum > 0 {
		params.Add(prefix+"cancelNum", fmt.Sprintf("%v", p.CancelNum))
	}
	if p.CancelTicket > 0 {
		params.Add(prefix+"cancelTicket", fmt.Sprintf("%v", p.CancelTicket))
	}
	if p.CancelAmount > 0 {
		params.Add(prefix+"cancelAmount", fmt.Sprintf("%v", p.CancelAmount))
	}
	if p.CancelCostMoney > 0 {
		params.Add(prefix+"cancelCostMoney", fmt.Sprintf("%v", p.CancelCostMoney))
	}
	if p.PrintNum > 0 {
		params.Add(prefix+"printNum", fmt.Sprintf("%v", p.PrintNum))
	}
	if p.AfterSaleTicketNum > 0 {
		params.Add(prefix+"afterSaleTicketNum", fmt.Sprintf("%v", p.AfterSaleTicketNum))
	}
	if p.AfterSaleRefundMoney > 0 {
		params.Add(prefix+"afterSaleRefundMoney", fmt.Sprintf("%v", p.AfterSaleRefundMoney))
	}
	if p.AfterSaleIncomeMoney > 0 {
		params.Add(prefix+"afterSaleIncomeMoney", fmt.Sprintf("%v", p.AfterSaleIncomeMoney))
	}
	return params
}


