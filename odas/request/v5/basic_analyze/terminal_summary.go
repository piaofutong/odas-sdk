// Code generated by sdk-generator. DO NOT EDIT.
// 此文件由代码生成器自动生成，请勿手动修改

package basic_analyze

import (
	"fmt"
	"net/url"
	"github.com/piaofutong/odas-sdk/odas/request/common"
	"strconv"
)

// TerminalSummaryReq TerminalSummary请求
type TerminalSummaryReq struct {
	Request common.PassedTimeSpanV4Request `json:"request,omitempty"`
	Limit int64 `json:"limit,omitempty"`

}

// Api 返回API路径
func (r *TerminalSummaryReq) Api() string {
	params := url.Values{}

	requestParams := r.Request.Params("")
	for key, values := range requestParams {
		for _, value := range values {
			params.Add(key, value)
		}
	}

	if r.Limit > 0 {
		params.Add("limit", strconv.FormatInt(r.Limit, 10))
	}
	return fmt.Sprintf("/v5/basic_analyze/report/g-terminal/summary?%s", params.Encode())

}

// Method 返回HTTP方法
func (r *TerminalSummaryReq) Method() string {
	return "GET"
}

// Body 返回请求体
func (r *TerminalSummaryReq) Body() []byte {
	return nil

}

// ContentType 返回内容类型
func (r *TerminalSummaryReq) ContentType() string {
	return "application/json"
}

// AuthRequired 返回是否需要认证
func (r *TerminalSummaryReq) AuthRequired() bool {
	return true
}


// TerminalSummaryResp TerminalSummary响应
type TerminalSummaryResp struct {
	Total TerminalSummary `json:"total,omitempty"`
	List []*TerminalSummaryList `json:"list,omitempty"`

}



// TerminalSummary TerminalSummary
type TerminalSummary struct {
	CheckOrders int64 `json:"checkOrders,omitempty"`
	CheckTickets int64 `json:"checkTickets,omitempty"`
	CheckPeople int64 `json:"checkPeople,omitempty"`

}

// Params 将TerminalSummary转换为url.Values
func (p TerminalSummary) Params(prefix string) url.Values {
	params := url.Values{}
	if p.CheckOrders > 0 {
		params.Add(prefix+"checkOrders", strconv.FormatInt(p.CheckOrders, 10))
	}
	if p.CheckTickets > 0 {
		params.Add(prefix+"checkTickets", strconv.FormatInt(p.CheckTickets, 10))
	}
	if p.CheckPeople > 0 {
		params.Add(prefix+"checkPeople", strconv.FormatInt(p.CheckPeople, 10))
	}
	return params
}


// TerminalSummaryList TerminalSummaryList
type TerminalSummaryList struct {
	TerminalId int64 `json:"terminalId,omitempty"`
	TerminalName string `json:"terminalName,omitempty"`
	Summary TerminalSummary `json:"summary,omitempty"`
	TerminalSummary TerminalSummary `json:"terminalSummary,omitempty"`

}

// Params 将TerminalSummaryList转换为url.Values
func (p TerminalSummaryList) Params(prefix string) url.Values {
	params := url.Values{}
	if p.TerminalId > 0 {
		params.Add(prefix+"terminalId", strconv.FormatInt(p.TerminalId, 10))
	}
	if p.TerminalName != "" {
		params.Add(prefix+"terminalName", p.TerminalName)
	}
	for key, values := range p.Summary.Params(prefix+"summary.") {
		for _, value := range values {
			params.Add(key, value)
		}
	}
	for key, values := range p.TerminalSummary.Params(prefix+"terminalSummary.") {
		for _, value := range values {
			params.Add(key, value)
		}
	}
	return params
}


