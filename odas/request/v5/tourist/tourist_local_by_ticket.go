// Code generated by sdk-generator. DO NOT EDIT.
// 此文件由代码生成器自动生成，请勿手动修改

package tourist

import (
	"fmt"
	"net/url"
	"github.com/piaofutong/odas-sdk/odas/request/common"
	"github.com/piaofutong/odas-sdk/odas/request/types"
	"strconv"
)

// TouristSummaryByLocalReq TouristSummaryByLocal请求
type TouristSummaryByLocalReq struct {
	Request common.PassedTimeSpanByOrderTypeV5Request `json:"request,omitempty"`
	Province string `json:"province,omitempty"`
	City string `json:"city,omitempty"`
	Limit int64 `json:"limit,omitempty"`
	Unknown bool `json:"unknown,omitempty"`
	RegionType types.RegionType_Enums `json:"regionType,omitempty"`

}

// Api 返回API路径
func (r *TouristSummaryByLocalReq) Api() string {
	params := url.Values{}

	requestParams := r.Request.Params("")
	for key, values := range requestParams {
		for _, value := range values {
			params.Add(key, value)
		}
	}

	if r.Province != "" {
		params.Add("province", r.Province)
	}
	if r.City != "" {
		params.Add("city", r.City)
	}
	if r.Limit > 0 {
		params.Add("limit", strconv.FormatInt(r.Limit, 10))
	}
	if r.Unknown {
		params.Add("unknown", "true")
	}
	if r.RegionType > 0 {
		params.Add("regionType", strconv.FormatInt(int64(r.RegionType), 10))
	}
	return fmt.Sprintf("/v5/tourist/portrait/g-ticket/tourist-local?%s", params.Encode())

}

// Method 返回HTTP方法
func (r *TouristSummaryByLocalReq) Method() string {
	return "GET"
}

// Body 返回请求体
func (r *TouristSummaryByLocalReq) Body() []byte {
	return nil

}

// ContentType 返回内容类型
func (r *TouristSummaryByLocalReq) ContentType() string {
	return "application/json"
}

// AuthRequired 返回是否需要认证
func (r *TouristSummaryByLocalReq) AuthRequired() bool {
	return true
}


// TouristSummaryByLocalResp TouristSummaryByLocal响应
type TouristSummaryByLocalResp struct {
	List []*TouristSummaryByLocalList `json:"list,omitempty"`

}



// TouristSummaryByLocalList TouristSummaryByLocalList
type TouristSummaryByLocalList struct {
	ProvinceName string `json:"provinceName,omitempty"`
	CityName string `json:"cityName,omitempty"`
	DistrictName string `json:"districtName,omitempty"`
	Summary TouristSummary `json:"summary,omitempty"`
	Percent float64 `json:"percent,omitempty"`
	CompareTotalRate float64 `json:"compareTotalRate,omitempty"`

}

// Params 将TouristSummaryByLocalList转换为url.Values
func (p TouristSummaryByLocalList) Params(prefix string) url.Values {
	params := url.Values{}
	if p.ProvinceName != "" {
		params.Add(prefix+"provinceName", p.ProvinceName)
	}
	if p.CityName != "" {
		params.Add(prefix+"cityName", p.CityName)
	}
	if p.DistrictName != "" {
		params.Add(prefix+"districtName", p.DistrictName)
	}
	for key, values := range p.Summary.Params(prefix+"summary.") {
		for _, value := range values {
			params.Add(key, value)
		}
	}
	if p.Percent > 0 {
		params.Add(prefix+"percent", fmt.Sprintf("%v", p.Percent))
	}
	if p.CompareTotalRate > 0 {
		params.Add(prefix+"compareTotalRate", fmt.Sprintf("%v", p.CompareTotalRate))
	}
	return params
}


